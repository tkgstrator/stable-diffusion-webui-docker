version: '3.9'

services:
  auto:
    platform: linux/amd64
    build:
      context: services/auto
      dockerfile: Dockerfile
      args:
        CUDA_VERSION: 12.1.1
        CUDNN_VERSION: 8
        TENSORRT_VERSION: 8.6
        TORCH_VERSION: 2.2.0
        UBUNTU_VERSION: 22.04
        SHA256_COMMIT_HASH: cf2772fab0af5573da775e7437e6acdca424f26e
        CLI_ARGS: --allow-code --medvram --xformers --enable-insecure-extension-access --api
    container_name: cuda12.1.1
    tty: true
    stdin_open: true
    environment:
      CLI_ARGS: --allow-code --medvram --xformers --enable-insecure-extension-access --api
    ports:
      - 7860:7860
    volumes:
      - &v1 ./data:/data
      - &v2 ./output:/output
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [compute, utility]
  
  model:
    platform: linux/amd64
    build:
      context: services/model
      dockerfile: Dockerfile
    container_name: cuda11.8.0_model
    profiles:
      - model
    volumes:
      - *v1

  linode_s3_backup:
    restart: always
    image: tkgling/s4cmd-docker@sha256:cf13622881cb05374216ae2c58574dc12285a22ccf9b68e7953571a25990322a
    container_name: s4cmd_backup
    environment:
      SCHEDULE: $SCHEDULE 
      S3_REGION: $S3_REGION
      S3_BUCKET: $S3_BUCKET
      S3_ENDPOINT: $S3_ENDPOINT
      S3_ACCESS_KEY: $S3_ACCESS_KEY
      S3_SECRET_KEY: $S3_SECRET_KEY
    volumes:
      - ./output/txt2img:/output/txt2img:ro
      - ./data:/data:ro

  cloudflare_tunnel:
    restart: always
    image: cloudflare/cloudflared
    command: tunnel run
    container_name: cloudflared_diffusion
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN